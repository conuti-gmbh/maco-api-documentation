openapi: 3.1.0
info:
  title: Sample API
  version: 1.0.1
  description: API description
  license:
    name: MIT License
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: 'https://api.macoapp.de'
    description: Mock-Umgebung | Mock environment
tags:
  - name: users
    description: Operations related to users
security: []
paths:
  /users:
    get:
      operationId: getUsers
      tags:
        - users
      summary: Get all users
      parameters:
        - name: pagination
          in: query
          description: Pagination parameters
          required: false
          schema:
            type: object
            properties:
              limit:
                type: integer
                description: Maximum number of items to return
                default: 10
              offset:
                type: integer
                description: Offset from which to start returning items
                default: 0
              page:
                type: integer
                description: Page number to return
                default: 1
            additionalProperties: false
        - name: sorting
          in: query
          description: Sorting parameters
          required: false
          schema:
            type: object
            properties:
              sortBy:
                type: string
                description: Field to sort by
                enum:
                  - id
                  - name
                  - createdAt
                  - updatedAt
                default: id
              sortOrder:
                type: string
                description: Sort order
                enum:
                  - asc
                  - desc
                default: asc
            additionalProperties: false
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/paths/~1users/post/requestBody/content/application~1json/schema'
              examples:
                UserExample:
                  summary: User example
                  description: An example of a user
                  value:
                    - id: 1
                      name: John Doe
                      email: johndoe@example.com
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                  statusCode:
                    type: integer
                required:
                  - error
                  - message
                  - statusCode
              example:
                error: Not Found
                message: The requested resource was not found.
                statusCode: 404
    post:
      operationId: createUser
      tags:
        - users
      summary: Create a new user
      requestBody:
        description: The user to create
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                name:
                  type: string
                email:
                  type: string
                  format: email
              required:
                - id
                - name
                - email
        required: true
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid request
  '/user/{userId}':
    get:
      operationId: getUser
      tags:
        - users
      summary: Get a user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the user
      responses:
        '200':
          $ref: '#/paths/~1users/get/responses/200'
        '404':
          $ref: '#/paths/~1users/get/responses/404'
